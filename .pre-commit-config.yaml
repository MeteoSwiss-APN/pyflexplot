repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: check-ast
    -   id: check-case-conflict
    -   id: check-docstring-first
    -   id: check-symlinks
    -   id: check-toml
    -   id: check-yaml
    -   id: debug-statements
    -   id: end-of-file-fixer
    -   id: trailing-whitespace
-   repo: local
    hooks:
    -   id: rstcheck
        name: rstcheck
        description: Check REST files for correctness
        language: system
        entry: rstcheck
        types: [rst]
-   repo: local
    hooks:
    -   id: codespell
        name: codespell
        description: Check for spelling errors
        language: system
        entry: codespell
        exclude: |
            (?x)^(
                poetry.lock |
                pyproject.toml |
            )$
-   repo: local
    hooks:
    -   id: black
        name: black
        description: Format Python code
        language: system
        entry: black
        types_or: [python, pyi]
-   repo: local
    hooks:
    -   id: isort
        name: isort
        description: Group and sort Python imports
        language: system
        entry: isort
        types_or: [python, pyi, cython]
-   repo: local
    hooks:
    -   id: pydocstyle
        name: pydocstyle
        description: Check docstrings in Python code for compliance with conventions
        language: system
        entry: pydocstyle
        types: [python]
        files: ^src/
# SR It would be handy to abort if one linter fails b/c the same error often
# SR triggers multiple linters. That way, if flake8 fails, pylint and mypy
# SR (which in large code bases can take some time to run) could be skipped
# SR before fixing the error. Unfortunately, pre-commit only provides the global
# SR option fail_fast, which would abort even after the small fixers and
# SR formatters changed something. A potential solution could be to write a
# SR small bash script run-linters.sh that runs flake8, pylint and run-mypy.sh
# SR in that order and aborts on error.
-   repo: local
    hooks:
    -   id: pylint
        name: pylint
        description: Check Python code for correctness, consistency and adherence to best practices
        language: system
        entry: pylint
        types: [python]
-   repo: local
    hooks:
    -   id: flake8
        name: flake8
        description: Check Python code for correctness, consistency and adherence to best practices
        language: system
        entry: flake8
        types: [python]
-   repo: local
    hooks:
    -   id: mypy
        name: mypy
        description: Perform static type analysis of Python code
        language: system
        entry: mypy
        require_serial: true
        pass_filenames: false
        verbose: true
        types: [python]
